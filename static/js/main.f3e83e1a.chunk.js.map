{"version":3,"sources":["component/Contacts/ContactList.js","component/Form/Form.js","component/Filter/Filter.js","App.js","index.js","component/Form/Form.module.css","component/Contacts/ContactList.module.css"],"names":["ContactList","contacts","onDeleteContact","className","css","list","map","name","number","id","listItem","btn","type","onClick","Form","state","handleInputChange","e","currentTarget","value","setState","submit","preventDefault","reset","props","onSubmit","this","form","label","input","onChange","pattern","title","required","button","Component","Filter","filterInput","filterValue","App","filter","addContact","find","toLowerCase","alert","contact","p","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevState","localState","JSON","parse","localStorage","getItem","setItem","stringify","VisibleContacts","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mPAGe,SAASA,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC9C,OACE,oBAAIC,UAAWC,IAAIC,KAAnB,SACGJ,EAASK,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACZ,qBAAIN,UAAWC,IAAIM,SAAnB,oBACMH,EADN,aACeC,GACb,wBACEL,UAAWC,IAAIO,IACfC,KAAK,SACLC,QAAS,kBAAMX,EAAgBO,IAHjC,sBAFgCA,Q,4BCuD3BK,E,4MA1DbC,MAAQ,CACNR,KAAM,GACNC,OAAQ,I,EAGXQ,kBAAoB,SAACC,GAClB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBb,EAAOY,K,EAG1BE,OAAS,SAACJ,GACRA,EAAEK,iBACF,EAAKC,QACL,EAAKC,MAAMC,SAAS,EAAKV,Q,EAG3BQ,MAAQ,WACN,EAAKH,SAAS,CAAEb,KAAM,GAAIC,OAAQ,M,4CAKpC,WACE,OACE,uBAAMiB,SAAUC,KAAKL,OAAQlB,UAAWC,IAAIuB,KAA5C,UACE,wBAAOxB,UAAWC,IAAIwB,MAAtB,iBAEE,uBACEhB,KAAK,OACLL,KAAK,OACLJ,UAAWC,IAAIyB,MACfV,MAAOO,KAAKX,MAAMR,KAClBuB,SAAUJ,KAAKV,kBACfe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAO9B,UAAWC,IAAIwB,MAAtB,kBAEE,uBACEhB,KAAK,MACLL,KAAK,SACLJ,UAAWC,IAAIyB,MACfV,MAAOO,KAAKX,MAAMP,OAClBsB,SAAUJ,KAAKV,kBACfe,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQrB,KAAK,SAAST,UAAWC,IAAI8B,OAArC,2B,GApDWC,aCYJC,EAbA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC7B,OACE,gCACE,uBACE1B,KAAK,OACLL,KAAK,SACLY,MAAOmB,EACPR,SAAUO,O,gBCDGE,E,4MACnBxB,MAAQ,CACNd,SAAU,GACVuC,OAAQ,I,EAgBVC,WAAa,YAAuB,IAApBlC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAKpB,GAJgB,EAAKO,MAAMd,SAASyC,MAClC,SAACzC,GAAD,OAAcA,EAASM,KAAKoC,gBAAkBpC,EAAKoC,iBAInDC,MAAM,GAAD,OAAIrC,EAAJ,gCACA,CACL,IAAMsC,EAAU,CACdtC,OACAC,UAGF,EAAKY,UAAS,SAAC0B,GAAD,MAAQ,CACpB7C,SAAS,GAAD,mBAAM6C,EAAE7C,UAAR,CAAkB4C,U,EAKhCE,aAAe,SAAC9B,GACd,EAAKG,SAAS,CAAEoB,OAAQvB,EAAEC,cAAcC,S,EAG1C6B,mBAAqB,WACnB,MAA6B,EAAKjC,MAA1ByB,EAAR,EAAQA,OAAQvC,EAAhB,EAAgBA,SACVgD,EAAmBT,EAAOG,cAChC,OAAO1C,EAASuC,QAAO,SAACK,GAAD,OACrBA,EAAQtC,KAAKoC,cAAcO,SAASD,O,EAIxCE,cAAgB,SAACC,GACf,EAAKhC,UAAS,SAACiC,GAAD,MAAgB,CAC5BpD,SAAUoD,EAAUpD,SAASuC,QAC3B,SAACK,GAAD,OAAaA,EAAQpC,KAAO2C,U,uDA/ClC,WACE,IAAME,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,aAC/CJ,GACF5B,KAAKN,SAAS,CAAEnB,SAAUqD,M,gCAI9B,SAAmBD,GACb3B,KAAKX,MAAMd,WAAaoD,EAAUpD,UACpCwD,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUlC,KAAKX,MAAMd,a,oBA2C/D,WACE,IAAQuC,EAAWd,KAAKX,MAAhByB,OACFqB,EAAkBnC,KAAKsB,qBAE7B,OACE,qCACE,oBAAI7C,UAAWC,IAAf,uBACA,cAAC,EAAD,CAAMqB,SAAUC,KAAKe,aACrB,oBAAItC,UAAWC,IAAf,sBAC8B,IAA7BsB,KAAKX,MAAMd,SAAS6D,OAAY,KAAK,cAAC,EAAD,CAAQ3C,MAAOqB,EAAQV,SAAUJ,KAAKqB,eAC5C,IAA/BrB,KAAKX,MAAMd,SAAS6D,OAAe,4CAClC,cAAC9D,EAAD,CACEC,SAAU4D,EACV3D,gBAAiBwB,KAAKyB,uB,GAvEDhB,aCFjC4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,kBCArDD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,gC","file":"static/js/main.f3e83e1a.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport css from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={css.listItem} key={id}>\n          {`${name}: ${number}`}\n          <button\n            className={css.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.object,\n  onDeleteContact: PropTypes.func,\n};","import React, { Component } from \"react\";\nimport css from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n };\n  \n  submit = (e) => {\n    e.preventDefault();\n    this.reset();\n    this.props.onSubmit(this.state);\n  }\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n \n\n  render() {\n    return (\n      <form onSubmit={this.submit} className={css.form}>\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.input}\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.input}\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.button}>\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ filterInput, filterValue }) => {\n  return (\n    <label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={filterInput}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  filterInput: PropTypes.func,\n  filterValue: PropTypes.string,\n};\n","import { Component } from \"react\";\nimport ContactList from \"./component/Contacts/ContactList\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport Form from \"./component/Form/Form\";\nimport Filter from \"./component/Filter/Filter\";\nimport css from \"./App.css\";\n\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const localState = JSON.parse(localStorage.getItem('Contacts'))\n    if (localState) {\n      this.setState({ contacts: localState })\n    } else {return}\n  };\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('Contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n\n  addContact = ({ name, number }) => {\n    let duplicate = this.state.contacts.find(\n      (contacts) => contacts.name.toLowerCase() === name.toLowerCase()\n    )\n\n    if (duplicate) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contact = {\n        name,\n        number,        \n      };\n\n      this.setState((p) => ({\n        contacts: [...p.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const VisibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1 className={css}>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2 className={css}>Contacts</h2>\n        {this.state.contacts.length===0? null:<Filter value={filter} onChange={this.changeFilter} />}\n        {this.state.contacts.length === 0 ? <p>No contacts</p> :\n          <ContactList\n            contacts={VisibleContacts}\n            onDeleteContact={this.deleteContact}\n          />}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2zpua\",\"button\":\"Form_button__SLP99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__11_1A\",\"listItem\":\"ContactList_listItem__2FDC4\"};"],"sourceRoot":""}